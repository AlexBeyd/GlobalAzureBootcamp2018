{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "EnvironmentCode": {
            "AllowedValues": [
                "dev",
                "qa",
                "stg",
                "prod"
            ],
            "maxLength": 4,
            "type": "string",
            "metadata": {
                "description": "The base name of the solution. Up to 4 characters."
            }
        },
        "AppName": {
            "maxLength": 7,
            "type": "string",
            "metadata": {
                "description": "The base name of the solution. Up to 7 characters."
            }
        },
        "RoleName": {
            "maxLength": 7,
            "type": "string",
            "metadata": {
                "description": "The keyvault name role in the solution. Up to 7 characters."
            }
        },
        "AccessPolicies": {
            "type": "array",
            "metadata": {
                "description": "Access policies object {\"tenantId\":\"\",\"objectId\":\"\",\"permissions\":{\"keys\":[\"\"],\"secrets\":[\"\"]}}"
            }
        },
        "LogsRetentionInDays": {
            "type": "int",
            "defaultValue": 0,
            "minValue": 0,
            "maxValue": 365,
            "metadata": {
                "description": "Specifies the number of days that logs are gonna be kept. If you do not want to apply any retention policy and retain data forever, set value to 0."
            }
        },
        "EnableVaultForDeployment": {
            "type": "bool",
            "defaultValue": false,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Specifies if the vault is enabled for deployment by script or compute (VM, Service Fabric, ...)"
            }
        },
        "EnableVaultForTemplateDeployment": {
            "type": "bool",
            "defaultValue": false,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Specifies if the vault is enabled for a template deployment"
            }
        },
        "EnableVaultForDiskEncryption": {
            "type": "bool",
            "defaultValue": false,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Specifies if the azure platform has access to the vault for enabling disk encryption scenarios."
            }
        },
        "VaultSku": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "Premium"
            ],
            "metadata": {
                "description": "Specifies the SKU for the vault"
            }
        },
        "ProtectWithLocks": {
            "type": "bool",
            "defaultValue": true
        },
        "UniqueString": {
            "type": "string",
            "minLength": 13,
            "maxLength": 13,
            "defaultValue": "[uniqueString(resourceGroup().id, resourceGroup().location)]"
        }
    },
    "variables": {
        "baseNamePattern": "[toLower( concat(parameters('AppName'), '-', parameters('EnvironmentCode'), '-{role}-', parameters('UniqueString')) )]",
        "baseStorageNamePattern": "[replace( variables('baseNamePattern'), '-', '0' )]",
        
        "keyVaultName": "[substring(replace(variables('baseNamePattern'),'{role}', tolower(parameters('RoleName')) ), 0, 23)]",
        "diagnosticStorageAccountName": "[substring(replace(variables('baseStorageNamePattern'),'{role}', tolower(replace( parameters('RoleName'), '-', '0' ))), 0, 23)]"
    },
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[variables('keyVaultName')]",
            "apiVersion": "2016-10-01",
            "Location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Key Vault with logging"
            },
            "properties": {
                "enabledForDeployment": "[parameters('enableVaultForDeployment')]",
                "enabledForTemplateDeployment": "[parameters('enableVaultForTemplateDeployment')]",
                "enabledForDiskEncryption": "[parameters('enableVaultForDiskEncryption')]",
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": "[parameters('AccessPolicies')]",
                "sku": {
                    "name": "[parameters('vaultSku')]",
                    "family": "A"
                }
            },
            "resources": [
                {
                    "type": "Microsoft.KeyVault/vaults/providers/diagnosticsettings",
                    "name": "[concat(variables('keyVaultName'), '/Microsoft.Insights/service')]",
                    "apiVersion": "2016-09-01",
                    "Location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
                        "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticStorageAccountName'))]"
                    ],
                    "properties": {
                        "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticStorageAccountName'))]",
                        "logs": [
                            {
                                "category": "AuditEvent",
                                "enabled": true,
                                "retentionPolicy": {
                                    "enabled": true,
                                    "days": "[parameters('LogsRetentionInDays')]"
                                }
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('diagnosticStorageAccountName')]",
            "apiVersion": "2016-12-01",
            "Location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "tags": {
                "displayName": "concat('Key Vault ', variables('keyVaultName'), ' diagnostics storage account')"
            },
            "properties": {
                "encryption": {
                    "keySource": "Microsoft.Storage",
                    "services": {
                        "blob": {
                            "enabled": true
                        }
                    }
                }
            }
        },
        {
            "condition": "[parameters('protectWithLocks')]",
            "comments": "Resource lock on Key Vault",
            "type": "Microsoft.KeyVault/vaults/providers/locks",
            "name": "[concat(variables('keyVaultName'), '/Microsoft.Authorization/DoNotDelete-', variables('keyVaultName') )]",
            "apiVersion": "2016-09-01",
            "properties": {
                "level": "CannotDelete"
            },
            "dependsOn": [
                "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
            ]
        },
        {
            "condition": "[parameters('protectWithLocks')]",
            "comments": "Resource lock on diagnostics storage account",
            "type": "Microsoft.Storage/storageAccounts/providers/locks",
            "name": "[concat(variables('diagnosticStorageAccountName'), '/Microsoft.Authorization/DoNotDelete-', variables('diagnosticStorageAccountName') )]",
            "apiVersion": "2016-09-01",
            "properties": {
                "level": "CannotDelete"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticStorageAccountName'))]"
            ]
        }
    ],
    "outputs": {
        "KeyVaultName": {
            "type": "string",
            "value": "[variables('keyVaultName')]"
        }
    }
}